---
- name: Bootstrap the master and worker nodes
  become: true
  hosts: [master_nodes, worker_nodes]

  tasks:
    - name: Install system packages
      apt:
        pkg:
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
          - samba
          - net-tools
          - docker.io
        state: latest
        update_cache: true
    
    - name: Add K8s GPG key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        
        state: present

    - name: Add k8s repo
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Install K8s
      apt:
        pkg:
          - kubeadm
          - kubelet
          - kubectl
        state: latest
        update_cache: true

    - name: Make sure docker uses correct cgroup driver
      copy:
        src: "{{ playbook_dir }}/templates/daemon.json"
        dest: /etc/docker/daemon.json
        remote_src: no
        owner: k8s
        mode: '0755'
        group: k8s

    - name: Restart docker service
      service:
        name: docker
        state: restarted
      
    - name: Create home directory
      file:
        path: "/home/k8s/.kube"
        state: directory

    - name: Remove dependencies that are no longer required
      apt:
        autoremove: yes

    - name: Enable cgroups memory
      copy:
        src: "{{ playbook_dir }}/templates/cmdline.txt"
        dest: /boot/firmware/cmdline.txt
        remote_src: no
        owner: root
        mode: '0751'
        group: root

    - name: Reboot machines and wait until they are back up
      reboot:

################################
################################

- name: Configure master nodes
  become: true
  hosts: [master_nodes]
  tasks:
    - name: Create bootstrap dir to store configs
      file:
        path: "/home/k8s/.bootstrap"
        state: directory

    - name: Copy kube-config
      copy:
        src: "{{ playbook_dir }}/templates/kube-config.yaml"
        dest: /home/k8s/.bootstrap/kube-config.yaml
        remote_src: no
        owner: k8s
        mode: '0755'
        group: k8s
      
    - name: Copy calico config
      copy:
        src: "{{ playbook_dir }}/templates/calico.yaml"
        dest: /home/k8s/.bootstrap/calico.yaml
        remote_src: no
        owner: k8s
        mode: '0755'
        group: k8s

    - name: Init master
      become: true
      shell: kubeadm init --config /home/k8s/.bootstrap/kube-config.yaml
    
    - name: Copy kubectl config
      copy: 
        src: /etc/kubernetes/admin.conf
        dest: /home/k8s/.kube/config
        owner: k8s
        group: k8s
        remote_src: yes

    - name: Fetch kubectl config
      fetch:
        become: false
        src: /home/k8s/.kube/config
        dest: "{{ playbook_dir }}/.kube/config"
        flat: yes

    - name: Install calico CNI
      become: false
      shell: kubectl apply -f /home/k8s/.bootstrap/calico.yaml

    - name: Create join token
      become: false
      shell: kubeadm token create  --print-join-command
      register: kubernetes_join_command

    - name: Print join command to console
      debug:
        msg: "{{ kubernetes_join_command.stdout_lines[0] }}"

    - name: Set join command fact
      set_fact:
        join_command: "{{ kubernetes_join_command.stdout_lines[0] }}"

################################
################################

- name: Join worker nodes to cluster
  hosts: [worker_nodes]
  become: yes
  gather_facts: yes

  tasks:
  - name: Join worker nodes
    shell: "{{ hostvars['k8s@master01']['join_command'] }}"
    register: joined_or_not

  - name: Print join output
    debug:
      msg: "{{ joined_or_not.stdout }}"

################################
################################

- name: Configure cluster
  hosts: [master_nodes]
  tasks:
  
  - name: Remove master node taint
    shell: kubectl taint nodes master01 node-role.kubernetes.io/control-plane:NoSchedule-

  - name: Copy metallb
    copy:
      src: "{{ playbook_dir }}/templates/metallb.yaml"
      dest: /home/k8s/.bootstrap/metallb.yaml
      remote_src: no
      owner: k8s
      mode: '0755'
      group: k8s

  - name: Install metallb
    become: false
    shell: kubectl apply -f /home/k8s/.bootstrap/metallb.yaml

  - name: Copy ELB config map
    copy:
      src: "{{ playbook_dir }}/templates/elb-cm.yaml"
      dest: /home/k8s/.bootstrap/elb-cm.yaml
      remote_src: no
      owner: k8s
      mode: '0755'
      group: k8s

  - name: Set ELB config map
    become: false
    shell: kubectl apply -f /home/k8s/.bootstrap/elb-cm.yaml 

  - name: Install nginx ingress-controller
    shell: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.2.0/deploy/static/provider/baremetal/deploy.yaml
